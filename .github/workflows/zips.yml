name: Plugin Zip Files

on:
  push:
    branches:
      - develop
      - main
      - 'feature/**'
      - 'release/**'
    paths:
      - '.github/workflows/zips.yml'
      - 'bin/release'
      - 'assets/**'
      - '!assets/**/__tests__/**/*.js'
      - '!assets/**/test/*.js'
      - '!assets/**/*.test.js'
      - 'includes/**'
      - 'google-site-kit.php'
      - 'scoper.inc.php'
      - 'uninstall.php'
      - 'composer.json'
      - 'composer.lock'
      - 'php-scoper/composer.lock'
      - 'package.json'
      - 'package-lock.json'
      - 'postcss.config.js'
      - 'webpack.config.js'
      - 'feature-flags.json'
    tags: ['**']
  pull_request:
    branches:
      - develop
      - main
      - 'feature/**'
    paths:
      - '.github/workflows/zips.yml'
      - 'bin/release'
      - 'assets/**'
      - '!assets/**/__tests__/**/*.js'
      - '!assets/**/test/*.js'
      - '!assets/**/*.test.js'
      - 'includes/**'
      - 'google-site-kit.php'
      - 'scoper.inc.php'
      - 'uninstall.php'
      - 'composer.json'
      - 'composer.lock'
      - 'php-scoper/composer.lock'
      - 'package.json'
      - 'package-lock.json'
      - 'postcss.config.js'
      - 'webpack.config.js'
      - 'feature-flags.json'
    types:
      - opened
      - closed
      - reopened
      - synchronize
      - ready_for_review

concurrency:
  group: zips-${{ github.ref }}
  cancel-in-progress: true

env:
  BUCKET_NAME: site-kit-github-artifacts

jobs:
  build-zips:
    name: Build Zips
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: false == ( ( github.event_name == 'pull_request' && ( github.event.action == 'closed' || github.event.pull_request.draft == true || contains( github.head_ref, 'dependabot/' ) ) ) || github.event.pull_request.head.repo.fork )
    steps:
      - uses: actions/checkout@v3
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '7.3'
          tools: composer:2.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Composer Install
        run: composer install --no-interaction --no-progress --no-dev
      - name: Setup Node.js (.nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: npm install
        run: |
          npm ci
      - name: Create destination directory and update file permissions
        run: |
          mkdir -p ${{ github.ref }}
          sudo chown -R $(id -u):$(id -g) .
      - name: Build develop version
        run: |
          npm run dev-zip
          mv *.zip ${{ github.ref }}/google-site-kit-dev.zip
      - name: Build release version
        run: |
          npm run release-zip
          mv *.zip ${{ github.ref }}/google-site-kit.zip
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: zip-files
          path: ${{ github.ref }}

  upload-to-cloud-storage:
    name: Upload to GCS
    runs-on: ubuntu-latest
    needs: build-zips
    steps:
      - name: Set branch environment variables
        id: branch-target
        if: github.event_name != 'pull_request'
        run: echo "dir=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
      - name: Set PR environment variables
        id: pr-target
        if: github.event_name == 'pull_request'
        env:
          PULL_REQUEST_NUMBER: ${{ github.event.number }}
        run: echo "dir=pull/${PULL_REQUEST_NUMBER}" >> $GITHUB_OUTPUT
      - uses: actions/download-artifact@v3
        with:
          name: zip-files
          path: ${{ github.ref }}
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - uses: google-github-actions/setup-gcloud@v1
      - name: Upload PR files
        run: gcloud storage cp --recursive ${{ github.ref }} gs://${{ env.BUCKET_NAME }}/builds/${TARGET_DIR}
        env:
          TARGET_DIR: ${{ steps.branch-target.outputs.dir }}${{ steps.pr-target.outputs.dir }}

  remove-pr:
    name: Remove Zips
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: ( github.event_name == 'pull_request' && github.event.action == 'closed' && contains( github.head_ref, 'dependabot/' ) == false ) && github.event.pull_request.head.repo.fork == false
    steps:
      - name: Set branch environment variables
        id: branch-target
        if: github.event_name != 'pull_request'
        run: echo "dir=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
      - name: Set PR environment variables
        id: pr-target
        if: github.event_name == 'pull_request'
        env:
          PULL_REQUEST_NUMBER: ${{ github.event.number }}
        run: echo "dir=pull/${PULL_REQUEST_NUMBER}" >> $GITHUB_OUTPUT
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - uses: google-github-actions/setup-gcloud@v1
      - name: Prune PR files
        run: gcloud storage rm gs://${{ env.BUCKET_NAME }}/builds/${TARGET_DIR}/*
        env:
          TARGET_DIR: ${{ steps.branch-target.outputs.dir }}${{ steps.pr-target.outputs.dir }}
