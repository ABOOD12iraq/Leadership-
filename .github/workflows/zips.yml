name: Plugin Zip Files

on:
  push:
    branches:
      - develop
      - main
      - 'feature/**'
      - 'release/**'
    paths:
      - '.github/workflows/zips.yml'
      - 'bin/release'
      - 'assets/**'
      - '!assets/**/__tests__/**/*.js'
      - '!assets/**/test/*.js'
      - '!assets/**/*.test.js'
      - 'includes/**'
      - 'google-site-kit.php'
      - 'scoper.inc.php'
      - 'uninstall.php'
      - 'composer.json'
      - 'composer.lock'
      - 'php-scoper/composer.lock'
      - 'package.json'
      - 'package-lock.json'
      - 'postcss.config.js'
      - 'webpack.config.js'
      - 'feature-flags.json'
    tags: ['**']
  pull_request:
    branches:
      - develop
      - main
      - 'feature/**'
    paths:
      - '.github/workflows/zips.yml'
      - 'bin/release'
      - 'assets/**'
      - '!assets/**/__tests__/**/*.js'
      - '!assets/**/test/*.js'
      - '!assets/**/*.test.js'
      - 'includes/**'
      - 'google-site-kit.php'
      - 'scoper.inc.php'
      - 'uninstall.php'
      - 'composer.json'
      - 'composer.lock'
      - 'php-scoper/composer.lock'
      - 'package.json'
      - 'package-lock.json'
      - 'postcss.config.js'
      - 'webpack.config.js'
      - 'feature-flags.json'
    types:
      - opened
      - closed
      - reopened
      - synchronize
      - ready_for_review

concurrency:
  group: zips-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-zips:
    name: Build Zips
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: false == ( ( github.event_name == 'pull_request' && ( github.event.action == 'closed' || github.event.pull_request.draft == true || contains( github.head_ref, 'dependabot/' ) ) ) || github.event.pull_request.head.repo.fork )
    steps:
      - uses: actions/checkout@v2
      - name: Composer Install
        uses: ./.github/actions/composer
      - name: Install node_modules
        uses: ./.github/actions/npm
      - name: Build ZIP files
        uses: ./.github/actions/zips
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: zip-files
          path: ${{ github.ref }}

  deploy-to-wiki:
    name: Deploy To Wiki
    runs-on: ubuntu-latest
    needs: build-zips
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}.wiki
          # GitHub Wikis use this term as their main branch; this cannot be
          # changed so we need to continue using it for now.
          ref: master
          token: ${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}
      - name: Download artifacts
        uses: actions/download-artifact@v1
        with:
          name: zip-files
          path: ${{ github.ref }}
      - name: Commit updates
        run: |
          git add .
          git status
          git diff --staged --quiet && echo 'No changes to commit; exiting!' && exit 0
          git pull --no-edit --quiet
          git commit -m "Build and publish ${{ github.ref }}"
          git push origin master
        env:
          GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
          GIT_AUTHOR_NAME: ${{ github.actor }}
          GIT_COMMITTER_EMAIL: ${{ github.actor }}@users.noreply.github.com
          GIT_COMMITTER_NAME: ${{ github.actor }}

  remove-pr:
    name: Remove Zips
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: ( github.event_name == 'pull_request' && github.event.action == 'closed' && contains( github.head_ref, 'dependabot/' ) == false ) && github.event.pull_request.head.repo.fork == false
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}.wiki
          # GitHub Wikis use this term as their main branch; this cannot be
          # changed so we need to continue using it for now.
          ref: master
          token: ${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}
      - name: Prune PR files
        run: |
          rm -rf "refs/pull/${{ github.event.pull_request.number }}"
          git add .
          git status
          git diff --staged --quiet && echo 'No changes to commit; exiting!' && exit 0
          git pull --no-edit --quiet
          git commit -m "Prune refs/pull/${{ github.event.pull_request.number }}"
          git push origin master
        env:
          GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
          GIT_AUTHOR_NAME: ${{ github.actor }}
          GIT_COMMITTER_EMAIL: ${{ github.actor }}@users.noreply.github.com
          GIT_COMMITTER_NAME: ${{ github.actor }}
