/**
 * Mixins.
 *
 * Site Kit by Google, Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@mixin clearfix {

	&::after {
		clear: both;
		content: "";
		display: block;
	}
}

@mixin googlesitekit-inner-padding {

	@media (min-width: $bp-tablet) {
		padding-left: 10px;
		padding-right: 10px;
	}
}

@mixin screen-reader-only {
	clip: rect(1px, 1px, 1px, 1px);
	height: 1px;
	overflow: hidden;
	position: absolute !important;
	width: 1px;
}

@mixin replace-text {
	overflow: hidden;
	text-indent: -9999px;
}

@mixin vertical-align {
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
}

@mixin horizontal-align {
	left: 50%;
	position: absolute;
	transform: translateX(-50%);
}

@mixin vh-align {
	left: 50%;
	position: absolute;
	top: 50%;
	transform: translate(-50%, -50%);
}

@mixin shadow {
	box-shadow: 0 1px 3px rgba($c-black, 0.2);
}

/**
 * Allows to set the font size and line height
 * dynamically across mostly the small screen and tablet breakpoints
 * It checks for a specific value in a map (default is the $typography map)
 * and returns the font size and line height
 *
 * @param {string} $tag An existing tag from the map
 * @param {string} $tagAfterBreakpoint Another tag for the tablet breakpoint
 * @param {string} $breakpoint Breakpoint for the second tag
 * @param {map} $map Map with keys having font-size and line-height keys.
 */
@mixin responsive-text($tag, $tagAfterBreakpoint: null, $breakpoint: $bp-tablet, $map: $typography) {
	$tagTypography: map-get($map, $tag);

	@if $tagTypography {
		font-size: map-get($tagTypography, "font-size");
		line-height: map-get($tagTypography, "line-height");
	}

	@if $breakpoint and $tagAfterBreakpoint {
		$tagAfterBreakpointTypography: map-get($map, $tagAfterBreakpoint);

		@if $tagAfterBreakpointTypography {

			@media (min-width: $breakpoint) {
				font-size: map-get($tagAfterBreakpointTypography, "font-size");
				line-height: map-get($tagAfterBreakpointTypography, "line-height");
			}
		}
	}
}
